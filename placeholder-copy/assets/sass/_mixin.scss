// Mixin
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
       -o-border-radius: $radius;
          border-radius: $radius;
}
@mixin transition($transition) {
  -webkit-transition: $transition;
     -moz-transition: $transition;
      -ms-transition: $transition;
       -o-transition: $transition;
          transition: $transition;
}
@mixin transition-delay($transition-delay) {
  -webkit-transition-delay: $transition-delay;
     -moz-transition-delay: $transition-delay;
      -ms-transition-delay: $transition-delay;
       -o-transition-delay: $transition-delay;
          transition-delay: $transition-delay;
}
@mixin transform($transform) {
  -webkit-transform: $transform;
     -moz-transform: $transform;
      -ms-transform: $transform;
       -o-transform: $transform;
          transform: $transform;
}
@mixin box-shadow($shadows...) {
  -webkit-box-shadow: $shadows;
     -moz-box-shadow: $shadows;
      -ms-box-shadow: $shadows;
       -o-box-shadow: $shadows;
          box-shadow: $shadows;
}
@mixin transform-origin($transform-origin) {
  -webkit-transform-origin: $transform-origin;
     -moz-transform-origin: $transform-origin;
      -ms-transform-origin: $transform-origin;
       -o-transform-origin: $transform-origin;
          transform-origin: $transform-origin;
}
@mixin transform-style($transform-style) {
  -webkit-transform-style: $transform-style;
     -moz-transform-style: $transform-style;
      -ms-transform-style: $transform-style;
       -o-transform-style: $transform-style;
          transform-style: $transform-style;
}
@mixin opacity($opacity){
  $IEValue: $opacity*100;
       opacity: $opacity;
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity="+$IEValue+")";
  filter: alpha(opacity=$IEValue);
}
@mixin gradient($from-color, $to-color) {
    background-color: mix($from-color, $to-color);
    background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from($from-color), to($to-color));
    background-image: -webkit-linear-gradient(top, $from-color, $to-color); 
    background-image:    -moz-linear-gradient(top, $from-color, $to-color);
    background-image:     -ms-linear-gradient(top, $from-color, $to-color);
    background-image:      -o-linear-gradient(top, $from-color, $to-color);
    -ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$from-color}', EndColorStr='#{$to-color}')";
}
@function prefix($property, $prefixes: (webkit moz o ms)) {
    $vendor-prefixed-properties: transform background-clip background-size;
    $result: ();
    @each $prefix in $prefixes {
       @if index($vendor-prefixed-properties, $property) {
         $property: -#{$prefix}-#{$property}
       }
       $result: append($result, $property);
    }
    @return $result;
}
@function trans-prefix($transition, $prefix: moz) {
    $prefixed: ();
    @each $trans in $transition {
        $prop-name: nth($trans, 1);
        $vendor-prop-name: prefix($prop-name, $prefix);
        $prop-vals: nth($trans, 2);
        $prefixed: append($prefixed, ($vendor-prop-name $prop-vals), comma);
    }
    @return $prefixed;
}
@mixin transition($values...) { 
    $transitions: ();
    @each $declaration in $values {
        $prop: nth($declaration, 1);
        $prop-opts: ();
        $length: length($declaration);
        @for $i from 2 through $length {
            $prop-opts: append($prop-opts, nth($declaration, $i));   
        }
        $trans: ($prop, $prop-opts);
        $transitions: append($transitions, $trans, comma);
    }
    -webkit-transition: trans-prefix($transitions, webkit);
    -moz-transition: trans-prefix($transitions, moz);
    -ms-transition: trans-prefix($transitions, ms);
    -o-transition: trans-prefix($transitions, o);
    transition: $values;
}
@mixin animation($animate...) {
    $max: length($animate);
    $animations: '';

    @for $i from 1 through $max {
        $animations: #{$animations + nth($animate, $i)};

        @if $i < $max {
            $animations: #{$animations + ", "};
        }
    }
    -webkit-animation: $animations;
    -moz-animation:    $animations;
    -ms-animation:      $animations;
    -o-animation:      $animations;
    animation:         $animations;
}

@mixin animation2($animation-name,$animation-duration,$animation-timing-function,$animation-delay,$animation-iteration-count) {
    
    -webkit-animation-name:				$animation-name;
    -moz-animation-name:   				$animation-name;
    -ms-animation-name:    		 		$animation-name;
    -o-animation-name:      				$animation-name;
    animation-name:        		 		$animation-name;
	-webkit-animation-duration: 		$animation-duration;
    -moz-animation-duration:    		$animation-duration;
    -ms-animation-duration:      		$animation-duration;
    -o-animation-duration:      		$animation-duration;
    animation-duration:         		$animation-duration;
	-webkit-animation-timing-function: 	$animation-timing-function;
    -moz-animation-timing-function:    	$animation-timing-function;
    -ms-animation-timing-function:      $animation-timing-function;
    -o-animation-timing-function:      	$animation-timing-function;
    animation-timing-function:         	$animation-timing-function;
	-webkit-animation-delay: 			$animation-delay;
    -moz-animation-delay:    			$animation-delay;
    -ms-animation-delay:      			$animation-delay;
    -o-animation-delay:      			$animation-delay;
    animation-delay:         			$animation-delay;
	-webkit-animation-iteration-count: 	$animation-iteration-count;
    -moz-animation-iteration-count:    	$animation-iteration-count;
    -ms-animation-iteration-count:     	$animation-iteration-count;
    -o-animation-iteration-count:      	$animation-iteration-count;
    animation-iteration-count:         	$animation-iteration-count;
}
@mixin keyframes($animationName) {
    @-webkit-keyframes #{$animationName} {
        @content;
    }
    @-moz-keyframes #{$animationName} {
        @content;
    }
	@-ms-keyframes #{$animationName} {
        @content;
    }
    @-o-keyframes #{$animationName} {
        @content;
    }
    @keyframes #{$animationName} {
        @content;
    }
}